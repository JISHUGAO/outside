<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/12/26 0026
 * Time: 18:19
 */

namespace common\models;


use api\modules\v1\models\Article;

class ArticleComment extends BaseActiveRecord
{
    public function rules()
    {
        return [
          [['content', 'article_id', 'user_id'], 'required']
        ];
    }

    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    public function getArticle()
    {
        return $this->hasOne(Article::className(), ['id' => 'article_id']);
    }

    public function beforeSave($insert)
    {
        if ($insert) {
            $this->create_by = time();
        }
        return parent::beforeSave($insert);
    }

    public static function getTotalCountByArticleId($articleId) {
        return self::find()->where(['article_id' => $articleId])->count();
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($insert) {
            $article = Article::getInstance($this->article_id);
            if ($article) {
                $article->setScenario(Article::SCENARIO_EDIT);
                $article->comment_count += 1;
                $article->save();
            }

        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function afterDelete()
    {
        $article = Article::getInstance($this->article_id);
        if ($article) {
            $article->setScenario(Article::SCENARIO_EDIT);
            $article->comment_count -= 1;
            $article->save();
        }

        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}