<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/12/5 0005
 * Time: 16:51
 */
namespace common\models;

use yii\web\IdentityInterface;
use Yii;

class User extends BaseActiveRecord  implements IdentityInterface
{
    const ADMIN_USER_FLAG = 1;
    const NORMAL_USER_FLAG = 0;

    const SCENARIO_ADD = 1;
    const SCENARIO_EDIT = 2;
    public static function tableName()
    {
        return '{{%user}}';
    }

    public function fields()
    {
        $fields = parent::fields(); // TODO: Change the autogenerated stub
        unset($fields['password']);
        return $fields;
    }

    public function scenarios()
    {
        $scenarios = parent::scenarios(); // TODO: Change the autogenerated stub
        return array_merge($scenarios, [
            self::SCENARIO_ADD => ['account', 'password', 'nickname'],
            self::SCENARIO_EDIT => ['password', 'nickname']
        ]);
    }

    public function rules()
    {
        return [
            [['account', 'password'], 'required', 'on' => self::SCENARIO_ADD],
            [['account', 'nickname'], 'required', 'on' => self::SCENARIO_EDIT],
            ['account', 'unique', 'targetClass' => '\common\models\User', 'message' => '账号已存在', 'on' => self::SCENARIO_ADD],
            ['account', 'string', 'min' => 6, 'max' => 20, 'on' => self::SCENARIO_ADD, 'message' => '账号长度不能少于6位'],
            ['password', 'string', 'min' => 6, 'max' => 20 , 'message' => '账号长度不能少于6位'],
            ['avatar', 'file']
        ];
    }


    public function beforeSave($insert)
    {
        if ($insert) {
            $this->create_by = time();
            if (empty($this->nickname)) {
                $this->nickname = '用户'.time();
            }
            $this->password = Yii::$app->security->generatePasswordHash($this->password);
        } else {
            if ($this->password) {
                $this->password = Yii::$app->security->generatePasswordHash($this->password);
            }
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function findIdentity($id)
    {
        return static::findOne([
            'id' => $id,
            'flag' => self::ADMIN_USER_FLAG
        ]);
    }

    public static function findIdentityByAccessToken($token, $type = null)
    {
        // TODO: Implement findIdentityByAccessToken() method.
    }

    public function getId()
    {
        return $this->id;
    }

    public function getAuthKey()
    {
        // TODO: Implement getAuthKey() method.
    }

    public function validateAuthKey($authKey)
    {
        // TODO: Implement validateAuthKey() method.
    }

    public static function findByAccount($account, $flag = null)
    {
        $where['account'] =$account;
        if ($flag !== null) {
            $where['flag'] = $flag;
        }
        return static::findOne($where);
    }

    public function validatePassword($password)
    {
        if (empty($this->password)) {
            return false;
        }
        return Yii::$app->security->validatePassword($password, $this->password);
    }
}